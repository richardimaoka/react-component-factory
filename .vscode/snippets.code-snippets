{
  // Place your react-component-factory workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "action data": {
    "prefix": "action",
    "scope": "json",
    "body": [
      "{",
      "  \"__typename\": \"Action\",",
      "  \"instruction\": {",
      "    \"__typename\": \"Paragraph\",",
      "    \"chunks\": [{",
      "      \"__typename\": \"TextChunk\",",
      "      \"text\": \"\",",
      "    }]",
      "  } ",
      "}"
    ]
  },
  "react component": {
    "prefix": "react component",
    "body": [
      "import { gql } from '@apollo/client'",
      "import { ${TM_FILENAME_BASE}Fragment } from '../../lib/generated/graphql",
      "",
      "interface ${TM_FILENAME_BASE}Props {",
      "  fragment: ${TM_FILENAME_BASE}Fragment",
      "}",
      "",
      "export const ${TM_FILENAME_BASE} = ({fragment}: ${TM_FILENAME_BASE}Fragment): JSX.Element => {",
      "  return <></>",
      "}",
      "",
      "${TM_FILENAME_BASE}.fragment = gql`",
      "  fragment ${TM_FILENAME_BASE} on XXX {",
      "",
      "  }",
      "`"
    ]
  }
}
